#include <Arduino.h>
#include <IPAddress.h>
#include <ESP8266WiFi.h>
#include <WiFiUdp.h>
#include <ESP8266Ping.h>
#include <lwip/etharp.h>
#include <lwip/netif.h>

/* 连接您的WIFI SSID和密码 */
#define WIFI_SSID       "HUAWEI-TFN7F5"
#define WIFI_PASSWD     "949625012"
//#define PC_MAC          "4C:ED:FB:BD:DC:E6"
#define NOTIFY_HOST     "sc.ftqq.com"
#define NOTIFY_PORT      80
#define NOTIFY_URL      "/SCU44583Te387109551e70dc28790757bf3796aa05c643c7f5ac0c.send"
#define MASK            IPAddress(0xFF, 0xFF, 0xFF, 0xFF)
#define WOL_PORT        9
bool status = false;

const IPAddress mobile(192, 168, 3, 52);


void wifiInit() {
    WiFi.mode(WIFI_STA);
    WiFi.begin(WIFI_SSID, WIFI_PASSWD);
    Serial.print("Connected to AP");
    while (WiFi.status() != WL_CONNECTED) {
        delay(100);
        Serial.print(".");
    }
    Serial.print("\nIP address: ");
    Serial.println(WiFi.localIP());
    WiFi.getNetworkInfo()
}

void sendToWeChat(String text) {
    String url = (String) NOTIFY_URL + "?text=" + text;
    WiFiClient client;
    if (!client.connect(NOTIFY_HOST, NOTIFY_PORT)) {
        Serial.println("Connection Failed");
        delay(1000);
        return;
    }
    String request = (String) ("GET ") + url + " HTTP/1.1\r\n" + "Host: " + NOTIFY_HOST + "\r\n\r\n";
    client.print(request);
    client.stop();
}

void sendMagicPacket() {
    WiFiUDP udp;
    udp.beginPacketMulticast(MASK, WOL_PORT, WiFi.localIP());
    const uint8_t package[102] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed,
                                  0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd,
                                  0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6,
                                  0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed,
                                  0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd,
                                  0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6,
                                  0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed, 0xfb, 0xbd, 0xdc, 0xe6, 0x4c, 0xed,
                                  0xfb, 0xbd, 0xdc, 0xe6};
    udp.write(package, sizeof(package));
    udp.endPacket();
}


void check() {
    eth_addr *mac;
    if (Ping.ping(mobile)) {
        Serial.println("Success!");
        send_magic_packet();
        if (!status) {
            sendToWeChat(mobile.toString() + "已连接WiFi！");
            status = true;
        }
    } else {
        Serial.print("Error :(\t");
        etharp_tmr();
        const ip_addr_t *unused_ipaddr;
        etharp_find_addr(nullptr, mobile, &mac, &unused_ipaddr);
        if (mac) {
            Serial.printf("Mac\t" MACSTR, MAC2STR(mac->addr));
        } else {
            sendToWeChat(mobile.toString() + "已断开wifi连接!");
        }
        Serial.println();
    }
}

void setup() {
    Serial.begin(115200);
    wifiInit();
}

void loop() {
    netif_init();
    check();
    delay(1000);
}
